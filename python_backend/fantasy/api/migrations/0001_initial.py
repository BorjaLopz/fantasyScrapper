# Generated by Django 5.2 on 2025-04-16 10:50

import django.contrib.postgres.fields
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Player",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("fantasy_id", models.IntegerField(default=0)),
                ("name", models.CharField(max_length=250)),
                ("nickname", models.CharField(max_length=250, unique=True)),
                ("image", models.TextField(null=True)),
                ("points", models.FloatField(default=0.0)),
                ("average_points", models.FloatField(default=0.0)),
                ("last_season_points", models.FloatField(default=0.0, null=True)),
                ("slug", models.CharField(max_length=100)),
                ("position_id", models.IntegerField(default=1)),
                ("position", models.CharField(max_length=10, null=True)),
                ("market_value", models.FloatField(default=0.0)),
                ("player_status", models.CharField(max_length=35, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Stat",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "mins_played",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.IntegerField(default=0), size=None
                    ),
                ),
                (
                    "goals",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.IntegerField(default=0), size=None
                    ),
                ),
                (
                    "goal_assist",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.IntegerField(default=0), size=None
                    ),
                ),
                (
                    "offtarget_att_assist",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.IntegerField(default=0), size=None
                    ),
                ),
                (
                    "pen_area_entries",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.IntegerField(default=0), size=None
                    ),
                ),
                (
                    "penalty_won",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.IntegerField(default=0), size=None
                    ),
                ),
                (
                    "penalty_save",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.IntegerField(default=0), size=None
                    ),
                ),
                (
                    "saves",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.IntegerField(default=0), size=None
                    ),
                ),
                (
                    "effective_clearance",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.IntegerField(default=0), size=None
                    ),
                ),
                (
                    "penalty_failed",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.IntegerField(default=0), size=None
                    ),
                ),
                (
                    "own_goals",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.IntegerField(default=0), size=None
                    ),
                ),
                (
                    "goals_conceded",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.IntegerField(default=0), size=None
                    ),
                ),
                (
                    "yellow_card",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.IntegerField(default=0), size=None
                    ),
                ),
                (
                    "second_yellow_card",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.IntegerField(default=0), size=None
                    ),
                ),
                (
                    "red_card",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.IntegerField(default=0), size=None
                    ),
                ),
                (
                    "total_scoring_att",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.IntegerField(default=0), size=None
                    ),
                ),
                (
                    "won_contest",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.IntegerField(default=0), size=None
                    ),
                ),
                (
                    "ball_recovery",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.IntegerField(default=0), size=None
                    ),
                ),
                (
                    "poss_lost_all",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.IntegerField(default=0), size=None
                    ),
                ),
                (
                    "penalty_conceded",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.IntegerField(default=0), size=None
                    ),
                ),
                (
                    "marca_points",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.IntegerField(default=0), size=None
                    ),
                ),
                ("week_number", models.IntegerField(default=0)),
                ("total_points", models.FloatField(default=0.0)),
                ("is_in_ideal_formation", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="Team",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("fantasy_id", models.IntegerField(default=0)),
                ("name", models.CharField(max_length=250, unique=True)),
                ("slug", models.CharField(max_length=150, unique=True)),
                ("badge", models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name="MarketValueHistoric",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("lfp_id", models.IntegerField(default=0)),
                ("market_value", models.FloatField(default=0)),
                ("date", models.DateTimeField()),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.player"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="WeekPoints",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("week_number", models.IntegerField(default=0)),
                ("points", models.FloatField(default=0.0)),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.player"
                    ),
                ),
            ],
        ),
    ]
